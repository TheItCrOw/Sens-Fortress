<UserControl x:Class="SensFortress.View.Main.Views.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SensFortress.View.Main.Views"
             xmlns:vms="clr-namespace:SensFortress.View.Main.ViewModel"
             xmlns:extensions="clr-namespace:SensFortress.View.Extensions"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="1100"           
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
            TextElement.Foreground="{DynamicResource MaterialDesignBody}"
            TextElement.FontWeight="Regular"
            TextElement.FontSize="13"
            TextOptions.TextFormattingMode="Ideal"
            TextOptions.TextRenderingMode="Auto"
            Background="White"
            FontFamily="{DynamicResource MaterialDesignFont}"
            >

    <UserControl.Resources>
        <Style x:Key="TreeViewItemContainerStyle" TargetType="{x:Type TreeViewItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                     Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="Black"/>
            </Style.Resources>
        </Style>
    </UserControl.Resources>

    <Grid Margin="5 0 5 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="35" MinHeight="35"/>
        </Grid.RowDefinitions>

        <!--lock button on the left-->
        <DockPanel Panel.ZIndex="1"  Grid.RowSpan="3" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Button Background="Black" Height="70" Width="70" 
                Margin="10 10 5 10" Command="{Binding LockUnlockFortressCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFloatingActionLightButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                <Setter Property="ToolTip" Value="Currently locked. Click to unlock."/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLocked}" Value="False">
                                <Setter Property="ToolTip" Value="Currently unlocked. Click to lock."/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <materialDesign:PackIcon Height="50" Width="50" VerticalAlignment="Center" Foreground="White">
                    <materialDesign:PackIcon.Style>
                        <Style TargetType="materialDesign:PackIcon">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                    <Setter Property="Kind" Value="ShieldCheck"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLocked}" Value="False">
                                    <Setter Property="Kind" Value="ShieldOff"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </materialDesign:PackIcon.Style>
                </materialDesign:PackIcon>
            </Button>
            <!--enter masterkey for locking-->
            <materialDesign:Card x:Name="Unlock_Card" materialDesign:ShadowAssist.ShadowDepth="Depth5" Background="WhiteSmoke" VerticalAlignment="Center" Panel.ZIndex="1"
                                 Visibility="{Binding ShowLockCard, Converter={StaticResource BoolToVisConverter}}">
                <DockPanel LastChildFill="False" VerticalAlignment="Center" Margin="10 2 10 10">
                    <materialDesign:PackIcon Kind="Key" Foreground="Black" VerticalAlignment="Center" Margin="0 10 0 0" Height="20" Width="20"/>
                    <!--masterkey texbox-->
                    <TextBox x:Name="MasterLock_Textbox" materialDesign:HintAssist.Hint="Enter Masterkey" materialDesign:HintAssist.IsFloating="True" Width="330" BorderBrush="Black" Visibility="Collapsed"
                                 Foreground="Black" BorderThickness="0 0 0 1" FontSize="17" Margin="10 0 10 0"/>
                    <!--masterkey passwordbox-->
                    <PasswordBox x:Name="MasterLock_PasswordBox" materialDesign:HintAssist.Hint="Enter Masterkey" materialDesign:HintAssist.IsFloating="True" Width="330" BorderBrush="Black"
                                 Foreground="Black" BorderThickness="0 0 0 1" FontSize="17" Margin="10 0 10 0"/>
                    <!--show/Hide buttoln-->
                    <Button Style="{StaticResource TreeViewButtonStyle}" x:Name="ShowHide_Button" Click="ShowHide_Button_Click" ToolTip="Show/Hide masterkey" Height="30" Width="30" 
                            VerticalAlignment="Center" Margin="0 10 0 0" Background="Black">
                        <materialDesign:PackIcon Kind="Show" Height="20" Width="20" Foreground="White"/>
                    </Button>
                    <!--Lock button-->
                    <Button Style="{StaticResource TreeViewButtonStyle}" x:Name="UnlockFortress_Button" Click="UnlockFortress_Button_Click" ToolTip="Unlock fortress" 
                            Height="30" Width="30" VerticalAlignment="Center" Margin="4 10 4 0" Background="Black">
                        <materialDesign:PackIcon Kind="LockOpen" Height="20" Width="20" Foreground="White"/>
                    </Button>
                    <!--close button-->
                    <Button x:Name="CloseLockCard_Button" Click="CloseLockCard_Button_Click" Style="{StaticResource TreeViewButtonStyle}" ToolTip="Close" Height="30" Width="30" 
                            VerticalAlignment="Center" Margin="0 10 0 0" Background="Black">
                        <materialDesign:PackIcon Kind="Close" Height="20" Width="20" Foreground="White"/>
                    </Button>
                </DockPanel>
            </materialDesign:Card>
        </DockPanel>
        
        <!--menu buttons on the right-->
        <materialDesign:PopupBox HorizontalAlignment="Right" PlacementMode="BottomAndAlignRightEdges" Panel.ZIndex="1" Foreground="White">
            <StackPanel Background="Transparent">
                <!--shutdown-->
                <Button Background="GhostWhite" Height="40" Width="40" HorizontalAlignment="Right" Panel.ZIndex="1" Grid.RowSpan="3" VerticalAlignment="Top"
                Margin="10 10 10 10" Style="{StaticResource MaterialDesignFloatingActionLightButton}" ToolTip="Close application" Command="{Binding ExitFortressCommand}">
                    <materialDesign:PackIcon Height="30" Width="30" VerticalAlignment="Center" Kind="Shutdown" Foreground="Black"/>
                </Button>
                <!--log out-->
                <Button Background="GhostWhite" Height="40" Width="40" HorizontalAlignment="Right" Panel.ZIndex="1" Grid.RowSpan="3" VerticalAlignment="Top"
                Margin="10 0 10 10" Style="{StaticResource MaterialDesignFloatingActionLightButton}" ToolTip="Leave fortress" Command="{Binding LogoutFortressCommand}">
                    <materialDesign:PackIcon Height="25" Width="25" VerticalAlignment="Center" Kind="Logout" Foreground="Black"/>
                </Button>
            </StackPanel>
        </materialDesign:PopupBox>
        
        <!--Header Title-->
        <materialDesign:Card Height="50" Background="{StaticResource ThemeDarkBlueBlack}">
            <DockPanel HorizontalAlignment="Left" Margin="80 0 20 0" VerticalAlignment="Center" LastChildFill="False">
                <!--Save button-->
                <materialDesign:Badged Badge="{Binding ChangesTracker}" BadgeColorZoneMode="Dark" ToolTip="Saveable changes" VerticalAlignment="Center" Margin="10 0 0 0">
                    <Button Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="Save" Command="{Binding SaveTreeChangesCommand}">
                        <materialDesign:PackIcon Kind="Gate" Height="30" Width="30" VerticalAlignment="Center"/>
                    </Button>
                </materialDesign:Badged>
                <!--Home Button-->
                <Button  Margin="10 0 0 0" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="Home" Command="{Binding NavigateToHomeHubCommand}">
                    <materialDesign:PackIcon Kind="Home" Height="30" Width="30" VerticalAlignment="Center"/>
                </Button>
                <!--settings Button-->
                <Button Margin="10 0 0 0" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="Configurations" Command="{Binding OpenSettingsCommand}">
                    <materialDesign:PackIcon Kind="Settings" Height="30" Width="30" VerticalAlignment="Center"/>
                </Button>
                <!--Security management Button-->
                <Button Margin="10 0 0 0" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="Security management" Command="{Binding OpenSecurityManagementCommand}">
                    <materialDesign:PackIcon Kind="SecurityAccount"   Height="27" Width="30" VerticalAlignment="Center"/>
                </Button>
            </DockPanel>
        </materialDesign:Card>

        <!--Progress Bar-->
        <StackPanel Grid.Row="1" Height="6">
            <ProgressBar x:Name="HomeLoading_ProgressBar" IsIndeterminate="{Binding IsLoading}"
                     Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisConverter}}" 
                     Foreground="Black" Height="6" VerticalAlignment="Top" Background="Transparent" BorderThickness="0"/>
        </StackPanel>

        <Grid Grid.Row="2">
            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0.5"/>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
           
            <!--left side Tree View here-->
            <Expander ExpandDirection="Left" FlowDirection="LeftToRight" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Foreground="Black">
                <Expander.Background>
                    <SolidColorBrush Color="White" Opacity="1"/>
                </Expander.Background>
                <Expander.Header>
                    <StackPanel>
                        <TextBlock Text="Storage chamber" Style="{StaticResource InformationTextblockStyle}" Foreground="Black">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="270" />
                            </TextBlock.LayoutTransform>
                            <materialDesign:PackIcon Margin="10 0 0 -10" Kind="TreasureChest" Height="35" Width="35" VerticalAlignment="Center"/>
                        </TextBlock>
                    </StackPanel>
                </Expander.Header>

                <!--Little gap to the left with Margin here-->
                <Grid Width="400" Margin="0 0 0 6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--if locked, show this instead of treeview-->
                    <materialDesign:Card Grid.Row="1" Width="400" VerticalAlignment="Stretch" Background="{StaticResource ThemeDarkBlueBlack}"
                                         Visibility="{Binding IsLocked, Converter={StaticResource BoolToVisConverter}}">
                        <StackPanel VerticalAlignment="Center">
                            <materialDesign:PackIcon Kind="ShieldCheck" Width="270" Height="270" HorizontalAlignment="Center" Foreground="White"/>
                            <TextBlock Text="Fortress is locked." Style="{StaticResource InformationTextblockStyle}" Foreground="GhostWhite"/>
                        </StackPanel>
                    </materialDesign:Card>

                    <!--Title-->
                    <materialDesign:Card Visibility="{Binding IsLocked, Converter={StaticResource InverseBoolToVisConverter}}">
                        <StackPanel>
                            <Expander IsExpanded="True" Background="{StaticResource ThemeDarkBlueBlack}" Foreground="White">
                                <Expander.Header>
                                    <DockPanel LastChildFill="False" HorizontalAlignment="Center">
                                        <TextBlock HorizontalAlignment="Center" Style="{StaticResource InformationTextblockStyle}" Text="Storage"/>
                                        <!--print emergency sheet button-->
                                        <Button Margin="15 0 0 0" ToolTip="Print emergency sheet" HorizontalAlignment="Right" Background="{StaticResource ThemeDarkBlueBlack}"
                                                materialDesign:ShadowAssist.ShadowDepth="Depth5" BorderBrush="White" Command="{Binding PrintEmergencySheetCommand}">
                                            <materialDesign:PackIcon Kind="Printer" Foreground="White" Width="25" Height="25"/>
                                        </Button>
                                    </DockPanel>

                                </Expander.Header>
                                <DockPanel HorizontalAlignment="Stretch" Margin="30 0 30 0">
                                    <materialDesign:PackIcon Kind="Search" VerticalAlignment="Top" Height="25" Width="25"/>
                                    <TextBox x:Name="Search_Textbox" FontStyle="Italic" FontSize="16" FontWeight="ExtraLight" HorizontalAlignment="Stretch" Margin="5 -15 0 10" 
                                         materialDesign:HintAssist.Hint="search..." TextChanged="Search_Textbox_TextChanged" PreviewKeyDown="Search_Textbox_PreviewKeyDown" materialDesign:HintAssist.IsFloating="True"/>
                                </DockPanel>
                            </Expander>
                        </StackPanel>
                    </materialDesign:Card>

                    <!--Storage chamber list-->
                    <materialDesign:Card Grid.Row="1" materialDesign:ShadowAssist.ShadowDepth="Depth5" VerticalAlignment="Stretch" Margin="0 5 0 0" Grid.RowSpan="1"
                                          Visibility="{Binding IsLocked, Converter={StaticResource InverseBoolToVisConverter}}">
                        <extensions:ExtendedTreeView x:Name="RootNodes_TreeView" ItemsSource="{Binding RootNodes}" 
                                                     SelectedItem_="{Binding SelectedTreeViewItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                     BorderThickness="0" ScrollViewer.VerticalScrollBarVisibility="Visible" Background="{StaticResource ThemeDarkBlueBlack}">
                            <extensions:ExtendedTreeView.ItemContainerStyle>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemContainerStyle}">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Style>
                            </extensions:ExtendedTreeView.ItemContainerStyle>
                            <extensions:ExtendedTreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type vms:TreeItemViewModel}" ItemsSource="{Binding Children}">
                                    <!--Card => this is the trigger point for dragging also-->
                                    <materialDesign:Card PreviewMouseLeftButtonDown="TreeItem_Card_PreviewMouseLeftButtonDown" AllowDrop="True">
                                        <!--Highlight the card when selected-->
                                        <materialDesign:Card.Style>
                                            <Style TargetType="materialDesign:Card">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                        <Setter Property="Background" Value="GhostWhite"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:Card.Style>
                                        <DockPanel x:Name="TreeItem_Dockpanel" Margin="3">
                                            <!--This is a placeholder for the badge, which shows, if the item is saveable!-->
                                            <materialDesign:Badged Background="Transparent" Margin="6 6 0 0" ToolTip="Saveable changes" VerticalAlignment="Top">
                                                <materialDesign:Badged.Badge>
                                                    <materialDesign:PackIcon Kind="Exclamation" Foreground="Black"/>
                                                </materialDesign:Badged.Badge>
                                                <materialDesign:Badged.Style>
                                                    <Style TargetType="materialDesign:Badged">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsDirty}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </materialDesign:Badged.Style>
                                            </materialDesign:Badged>

                                            <materialDesign:PackIcon x:Name="TreeItem_Icon" VerticalAlignment="Center" Margin="0 0 5 0">
                                                <materialDesign:PackIcon.Style>
                                                    <Style TargetType="materialDesign:PackIcon">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=TreeType}" Value="{x:Static vms:TreeDepth.Root}">
                                                                <Setter Property="Kind" Value="FolderHash"/>
                                                                <Setter Property="Width" Value="35"/>
                                                                <Setter Property="Height" Value="35"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=TreeType}" Value="{x:Static vms:TreeDepth.Branch}">
                                                                <Setter Property="Kind" Value="Folder"/>
                                                                <Setter Property="Width" Value="35"/>
                                                                <Setter Property="Height" Value="35"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=TreeType}"  Value="{x:Static vms:TreeDepth.Leaf}">
                                                                <Setter Property="Kind" Value="ShieldKey"/>
                                                                <Setter Property="Width" Value="35"/>
                                                                <Setter Property="Height" Value="35"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                <Setter Property="Foreground" Value="Black"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                                <Setter Property="Foreground" Value="White"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </materialDesign:PackIcon.Style>
                                            </materialDesign:PackIcon>
                                            <!--Name textbox-->
                                            <TextBox x:Name="TreeItemName_Textbox" Text="{Binding Name}" Margin="3 2" VerticalAlignment="Center" Focusable="{Binding IsEditable}" Cursor="Arrow"
                                                     MouseDoubleClick="TreeItemName_Textbox_MouseDoubleClick">
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource TreeViewTextboxStyle}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                                <Setter Property="Foreground" Value="Black"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=TreeType}" Value="{x:Static vms:TreeDepth.Branch}">
                                                                <Setter Property="FontSize" Value="17"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=TreeType}"  Value="{x:Static vms:TreeDepth.Leaf}">
                                                                <Setter Property="FontSize" Value="17"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=IsEditable}" Value="True">
                                                                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                                                                <Setter Property="Background" Value="FloralWhite"/>
                                                                <Setter Property="Foreground" Value="Black"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=IsHighlighted}" Value="true">
                                                                <Setter Property="Foreground" Value="Lime"/>
                                                                <Setter Property="FontWeight" Value="ExtraBold"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                            <!--Edit button-->
                                            <Button x:Name="EditTreeItemButton" Style="{StaticResource TreeViewButtonStyle}" Grid.Column="1" Margin="5 0 5 0" Command="{Binding EditTreeItemCommand}"
                                        Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolToVisConverter}}">
                                                <materialDesign:PackIcon Kind="Edit" ToolTip="Edit" Foreground="White"/>
                                            </Button>
                                            <!--Add branch button. The x:Name is passed as a parameter to the TreeItemViewModel - keep that in mind, when changing.-->
                                            <Button x:Name="AddBranch_Button" Style="{StaticResource TreeViewButtonStyle}" Grid.Column="1" Margin="5 0 5 0" Command="{Binding AddTreeItemCommand}" CommandParameter="{Binding ElementName=AddBranch_Button, Path=Name}"
                                        Visibility="{Binding Path=MayHaveChildren, Converter={StaticResource BoolToVisConverter}}">
                                                <materialDesign:PackIcon Kind="FolderAdd" ToolTip="Add directory" Foreground="White"/>
                                            </Button>
                                            <!--Add leaf button. The x:Name is passed as a parameter to the TreeItemViewModel - keep that in mind, when changing.-->
                                            <Button x:Name="AddLeaf_Button" Style="{StaticResource TreeViewButtonStyle}" Grid.Column="1" Margin="5 0 5 0" Command="{Binding AddTreeItemCommand}" CommandParameter="{Binding ElementName=AddLeaf_Button, Path=Name}"
                                        Visibility="{Binding Path=MayHaveChildren, Converter={StaticResource BoolToVisConverter}}">
                                                <materialDesign:PackIcon Kind="KeyAdd" ToolTip="Add password" Foreground="White"/>
                                            </Button>
                                            <!--Delete button-->
                                            <Button x:Name="DeleteTreeItemButton" Style="{StaticResource TreeViewButtonStyle}" Grid.Column="1" Margin="5 0 5 0" Command="{Binding DeleteTreeItemCommand}"
                                        Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolToVisConverter}}">
                                                <materialDesign:PackIcon Kind="Delete" ToolTip="Delete" Foreground="White"/>
                                            </Button>
                                        </DockPanel>
                                    </materialDesign:Card>
                                </HierarchicalDataTemplate>
                            </extensions:ExtendedTreeView.ItemTemplate>
                        </extensions:ExtendedTreeView>
                    </materialDesign:Card>

                    <!--Add root => Name is used in code!-->
                    <Button Grid.Row="2" Background="{StaticResource ThemeDarkBlueBlack}" x:Name="AddRootItem_Button" ToolTip="Add a new root" Style="{StaticResource MaterialDesignRaisedDarkButton}" 
                            Margin="0 10 0 10" Command="{Binding AddTreeItemCommand}" CommandParameter="{Binding ElementName=AddRootItem_Button, Path=Name}" 
                            materialDesign:ShadowAssist.ShadowDepth="Depth2"  Visibility="{Binding IsLocked, Converter={StaticResource InverseBoolToVisConverter}}">
                        <materialDesign:PackIcon Kind="FolderAdd" Height="30" Width="30" VerticalAlignment="Center"/>
                    </Button>
                </Grid>
            </Expander>
            
            <!--Middle menu content-->
            <Frame x:Name="SelectedView_Frame" Grid.Column="1" Content="{Binding SelectedContent}"/>
        </Grid>

        <!--Gridsplitter 1-->
        <GridSplitter Grid.Row="3" HorizontalAlignment="Stretch" Background="White"/>

        <!--Log here-->
        <materialDesign:Card Grid.Row="4" VerticalAlignment="Stretch" Background="{StaticResource ThemeDarkBlueBlack}">
            <ScrollViewer extensions:AutoScrollBehavior.AutoScroll="{Binding ScrollToBottom}" HorizontalScrollBarVisibility="Hidden">
                <StackPanel>
                    <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth5">
                    </materialDesign:Card>
                    <ListView ItemsSource="{Binding TaskLogs}" HorizontalContentAlignment="Stretch">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <materialDesign:PackIcon Kind="ChangeHistory" VerticalAlignment="Center"/>
                                    <TextBlock MaxWidth="900" Margin="10 0 10 0" HorizontalAlignment="Left" Text="{Binding}" TextWrapping="Wrap" Style="{StaticResource SmallTextblockStyle}"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </ScrollViewer>
        </materialDesign:Card>
    </Grid>
</UserControl>
